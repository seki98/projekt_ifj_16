
Token type in context of this project contains 3 variables
	Token type
	Token name
	Line number of the token's occurence


TOKENTYPE | TOKEN_NAME

SIGN/OPERATOR | +, -, *, /, <, >, <=, >=, ==, !=
ASSIGNMENT | "="
UNDERSCORE | "_"
DOT/DECIMAL POINT | "."
COMMA | ","
SEMICOLON | ";"
LINE_COMMENT | "//"
BLOCK_COMMENT_START | "/*"
BLOCK_COMMENT_END | "*/" 
BLANK_SPACE | " "
TABULATOR

LITERAL
LABEL
EXPRESSION
CLASS_DECL | [$A-Z_a-z_0-9] (Main)
FUNC_DECL | [$A-Z_a-z_0-9]
FUNC_DECL_PARAMS | [$A-Z_a-z_0-9]
???FUNC_CALL | [$A-Z_a-z_0-9]??? (run)
IDENTIFIER [$A-Z_a-z_0-9]
====> can start only with alpha(A-Z, a-z), underscore("_") or dolar("$")

DATATYPE | int, double, String
KEYWORDS | boolean, break, class, continue, do, double, else, false, for, if, int, return, String, static, void, while
BUILT-IN_FUNCTIONS:
 int readInt(); 
 double readDouble();
 String readString();
 voidprint();
 int length(String s)
 String substr(String s, int i, int n)
 (substring)
 int compare(String s1, String s2)
 (compareTo)
 int find(String s, String search)
 String sort(String s)

(L_parenth)/(R_parenth): 
L_BRACKET_ROUND | (	
R_BRACKET_ROUND | )	
L_BRACKET_CURLY | {
R_BRACKET_CURLY | }
L_BRACKET_SQUARE | [
R_BRACKET_SQUARE | ]

L_BRACKET_CHEVRON | <
R_BRACKET_CHEVRON | >

EOF | [eof sign], NULL

.... add more....